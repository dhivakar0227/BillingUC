// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.5.1
// source: billing.proto

package billingpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Bill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName   string  `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string  `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	InvoiceDate string  `protobuf:"bytes,3,opt,name=invoice_date,json=invoiceDate,proto3" json:"invoice_date,omitempty"`
	InvoiceAmt  float32 `protobuf:"fixed32,4,opt,name=invoice_amt,json=invoiceAmt,proto3" json:"invoice_amt,omitempty"`
}

func (x *Bill) Reset() {
	*x = Bill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bill) ProtoMessage() {}

func (x *Bill) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bill.ProtoReflect.Descriptor instead.
func (*Bill) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{0}
}

func (x *Bill) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Bill) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Bill) GetInvoiceDate() string {
	if x != nil {
		return x.InvoiceDate
	}
	return ""
}

func (x *Bill) GetInvoiceAmt() float32 {
	if x != nil {
		return x.InvoiceAmt
	}
	return 0
}

type SendInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Biller *Bill `protobuf:"bytes,1,opt,name=biller,proto3" json:"biller,omitempty"`
}

func (x *SendInvoiceRequest) Reset() {
	*x = SendInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInvoiceRequest) ProtoMessage() {}

func (x *SendInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInvoiceRequest.ProtoReflect.Descriptor instead.
func (*SendInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{1}
}

func (x *SendInvoiceRequest) GetBiller() *Bill {
	if x != nil {
		return x.Biller
	}
	return nil
}

type SendInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SendInvoiceResponse) Reset() {
	*x = SendInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInvoiceResponse) ProtoMessage() {}

func (x *SendInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInvoiceResponse.ProtoReflect.Descriptor instead.
func (*SendInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{2}
}

func (x *SendInvoiceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type ReceiveStreamInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Biller *Bill `protobuf:"bytes,1,opt,name=biller,proto3" json:"biller,omitempty"`
}

func (x *ReceiveStreamInvoiceRequest) Reset() {
	*x = ReceiveStreamInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveStreamInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveStreamInvoiceRequest) ProtoMessage() {}

func (x *ReceiveStreamInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveStreamInvoiceRequest.ProtoReflect.Descriptor instead.
func (*ReceiveStreamInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{3}
}

func (x *ReceiveStreamInvoiceRequest) GetBiller() *Bill {
	if x != nil {
		return x.Biller
	}
	return nil
}

type ReceiveStreamInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ReceiveStreamInvoiceResponse) Reset() {
	*x = ReceiveStreamInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveStreamInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveStreamInvoiceResponse) ProtoMessage() {}

func (x *ReceiveStreamInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveStreamInvoiceResponse.ProtoReflect.Descriptor instead.
func (*ReceiveStreamInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{4}
}

func (x *ReceiveStreamInvoiceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type SendStreamInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Biller *Bill `protobuf:"bytes,1,opt,name=biller,proto3" json:"biller,omitempty"`
}

func (x *SendStreamInvoiceRequest) Reset() {
	*x = SendStreamInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendStreamInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStreamInvoiceRequest) ProtoMessage() {}

func (x *SendStreamInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStreamInvoiceRequest.ProtoReflect.Descriptor instead.
func (*SendStreamInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{5}
}

func (x *SendStreamInvoiceRequest) GetBiller() *Bill {
	if x != nil {
		return x.Biller
	}
	return nil
}

type SendStreamInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SendStreamInvoiceResponse) Reset() {
	*x = SendStreamInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendStreamInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStreamInvoiceResponse) ProtoMessage() {}

func (x *SendStreamInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStreamInvoiceResponse.ProtoReflect.Descriptor instead.
func (*SendStreamInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{6}
}

func (x *SendStreamInvoiceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type SendReceiveStreamInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Biller *Bill `protobuf:"bytes,1,opt,name=biller,proto3" json:"biller,omitempty"`
}

func (x *SendReceiveStreamInvoiceRequest) Reset() {
	*x = SendReceiveStreamInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReceiveStreamInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReceiveStreamInvoiceRequest) ProtoMessage() {}

func (x *SendReceiveStreamInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReceiveStreamInvoiceRequest.ProtoReflect.Descriptor instead.
func (*SendReceiveStreamInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{7}
}

func (x *SendReceiveStreamInvoiceRequest) GetBiller() *Bill {
	if x != nil {
		return x.Biller
	}
	return nil
}

type SendReceiveStreamInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SendReceiveStreamInvoiceResponse) Reset() {
	*x = SendReceiveStreamInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_billing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReceiveStreamInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReceiveStreamInvoiceResponse) ProtoMessage() {}

func (x *SendReceiveStreamInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_billing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReceiveStreamInvoiceResponse.ProtoReflect.Descriptor instead.
func (*SendReceiveStreamInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_billing_proto_rawDescGZIP(), []int{8}
}

func (x *SendReceiveStreamInvoiceResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_billing_proto protoreflect.FileDescriptor

var file_billing_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x86, 0x01, 0x0a, 0x04, 0x62, 0x69, 0x6c,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x6d,
	0x74, 0x22, 0x3b, 0x0a, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x2d,
	0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x44, 0x0a,
	0x1b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06,
	0x62, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62,
	0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x62, 0x69, 0x6c,
	0x6c, 0x65, 0x72, 0x22, 0x36, 0x0a, 0x1c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x41, 0x0a, 0x18, 0x73,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x33,
	0x0a, 0x19, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x48, 0x0a, 0x1f, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x52, 0x06, 0x62, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x22, 0x3a, 0x0a,
	0x20, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x9c, 0x03, 0x0a, 0x0e, 0x42, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b,
	0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x12, 0x24, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x5e, 0x0a, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x21, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x2e, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28,
	0x01, 0x12, 0x75, 0x0a, 0x18, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x28, 0x2e,
	0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x62, 0x69, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_billing_proto_rawDescOnce sync.Once
	file_billing_proto_rawDescData = file_billing_proto_rawDesc
)

func file_billing_proto_rawDescGZIP() []byte {
	file_billing_proto_rawDescOnce.Do(func() {
		file_billing_proto_rawDescData = protoimpl.X.CompressGZIP(file_billing_proto_rawDescData)
	})
	return file_billing_proto_rawDescData
}

var file_billing_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_billing_proto_goTypes = []interface{}{
	(*Bill)(nil),                             // 0: billing.bill
	(*SendInvoiceRequest)(nil),               // 1: billing.sendInvoiceRequest
	(*SendInvoiceResponse)(nil),              // 2: billing.sendInvoiceResponse
	(*ReceiveStreamInvoiceRequest)(nil),      // 3: billing.receiveStreamInvoiceRequest
	(*ReceiveStreamInvoiceResponse)(nil),     // 4: billing.receiveStreamInvoiceResponse
	(*SendStreamInvoiceRequest)(nil),         // 5: billing.sendStreamInvoiceRequest
	(*SendStreamInvoiceResponse)(nil),        // 6: billing.sendStreamInvoiceResponse
	(*SendReceiveStreamInvoiceRequest)(nil),  // 7: billing.sendReceiveStreamInvoiceRequest
	(*SendReceiveStreamInvoiceResponse)(nil), // 8: billing.sendReceiveStreamInvoiceResponse
}
var file_billing_proto_depIdxs = []int32{
	0, // 0: billing.sendInvoiceRequest.biller:type_name -> billing.bill
	0, // 1: billing.receiveStreamInvoiceRequest.biller:type_name -> billing.bill
	0, // 2: billing.sendStreamInvoiceRequest.biller:type_name -> billing.bill
	0, // 3: billing.sendReceiveStreamInvoiceRequest.biller:type_name -> billing.bill
	1, // 4: billing.BillingService.sendInvoice:input_type -> billing.sendInvoiceRequest
	3, // 5: billing.BillingService.receiveStreamInvoice:input_type -> billing.receiveStreamInvoiceRequest
	5, // 6: billing.BillingService.sendStreamInvoice:input_type -> billing.sendStreamInvoiceRequest
	7, // 7: billing.BillingService.sendReceiveStreamInvoice:input_type -> billing.sendReceiveStreamInvoiceRequest
	2, // 8: billing.BillingService.sendInvoice:output_type -> billing.sendInvoiceResponse
	4, // 9: billing.BillingService.receiveStreamInvoice:output_type -> billing.receiveStreamInvoiceResponse
	6, // 10: billing.BillingService.sendStreamInvoice:output_type -> billing.sendStreamInvoiceResponse
	8, // 11: billing.BillingService.sendReceiveStreamInvoice:output_type -> billing.sendReceiveStreamInvoiceResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_billing_proto_init() }
func file_billing_proto_init() {
	if File_billing_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_billing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveStreamInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveStreamInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendStreamInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendStreamInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReceiveStreamInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_billing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReceiveStreamInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_billing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_billing_proto_goTypes,
		DependencyIndexes: file_billing_proto_depIdxs,
		MessageInfos:      file_billing_proto_msgTypes,
	}.Build()
	File_billing_proto = out.File
	file_billing_proto_rawDesc = nil
	file_billing_proto_goTypes = nil
	file_billing_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BillingServiceClient is the client API for BillingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BillingServiceClient interface {
	//unary
	SendInvoice(ctx context.Context, in *SendInvoiceRequest, opts ...grpc.CallOption) (*SendInvoiceResponse, error)
	// server streaming
	ReceiveStreamInvoice(ctx context.Context, in *ReceiveStreamInvoiceRequest, opts ...grpc.CallOption) (BillingService_ReceiveStreamInvoiceClient, error)
	// client streaming
	SendStreamInvoice(ctx context.Context, opts ...grpc.CallOption) (BillingService_SendStreamInvoiceClient, error)
	// client and server streaming
	SendReceiveStreamInvoice(ctx context.Context, opts ...grpc.CallOption) (BillingService_SendReceiveStreamInvoiceClient, error)
}

type billingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBillingServiceClient(cc grpc.ClientConnInterface) BillingServiceClient {
	return &billingServiceClient{cc}
}

func (c *billingServiceClient) SendInvoice(ctx context.Context, in *SendInvoiceRequest, opts ...grpc.CallOption) (*SendInvoiceResponse, error) {
	out := new(SendInvoiceResponse)
	err := c.cc.Invoke(ctx, "/billing.BillingService/sendInvoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) ReceiveStreamInvoice(ctx context.Context, in *ReceiveStreamInvoiceRequest, opts ...grpc.CallOption) (BillingService_ReceiveStreamInvoiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BillingService_serviceDesc.Streams[0], "/billing.BillingService/receiveStreamInvoice", opts...)
	if err != nil {
		return nil, err
	}
	x := &billingServiceReceiveStreamInvoiceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BillingService_ReceiveStreamInvoiceClient interface {
	Recv() (*ReceiveStreamInvoiceResponse, error)
	grpc.ClientStream
}

type billingServiceReceiveStreamInvoiceClient struct {
	grpc.ClientStream
}

func (x *billingServiceReceiveStreamInvoiceClient) Recv() (*ReceiveStreamInvoiceResponse, error) {
	m := new(ReceiveStreamInvoiceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *billingServiceClient) SendStreamInvoice(ctx context.Context, opts ...grpc.CallOption) (BillingService_SendStreamInvoiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BillingService_serviceDesc.Streams[1], "/billing.BillingService/sendStreamInvoice", opts...)
	if err != nil {
		return nil, err
	}
	x := &billingServiceSendStreamInvoiceClient{stream}
	return x, nil
}

type BillingService_SendStreamInvoiceClient interface {
	Send(*SendStreamInvoiceRequest) error
	CloseAndRecv() (*SendStreamInvoiceResponse, error)
	grpc.ClientStream
}

type billingServiceSendStreamInvoiceClient struct {
	grpc.ClientStream
}

func (x *billingServiceSendStreamInvoiceClient) Send(m *SendStreamInvoiceRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *billingServiceSendStreamInvoiceClient) CloseAndRecv() (*SendStreamInvoiceResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(SendStreamInvoiceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *billingServiceClient) SendReceiveStreamInvoice(ctx context.Context, opts ...grpc.CallOption) (BillingService_SendReceiveStreamInvoiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BillingService_serviceDesc.Streams[2], "/billing.BillingService/sendReceiveStreamInvoice", opts...)
	if err != nil {
		return nil, err
	}
	x := &billingServiceSendReceiveStreamInvoiceClient{stream}
	return x, nil
}

type BillingService_SendReceiveStreamInvoiceClient interface {
	Send(*SendReceiveStreamInvoiceRequest) error
	Recv() (*SendReceiveStreamInvoiceResponse, error)
	grpc.ClientStream
}

type billingServiceSendReceiveStreamInvoiceClient struct {
	grpc.ClientStream
}

func (x *billingServiceSendReceiveStreamInvoiceClient) Send(m *SendReceiveStreamInvoiceRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *billingServiceSendReceiveStreamInvoiceClient) Recv() (*SendReceiveStreamInvoiceResponse, error) {
	m := new(SendReceiveStreamInvoiceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BillingServiceServer is the server API for BillingService service.
type BillingServiceServer interface {
	//unary
	SendInvoice(context.Context, *SendInvoiceRequest) (*SendInvoiceResponse, error)
	// server streaming
	ReceiveStreamInvoice(*ReceiveStreamInvoiceRequest, BillingService_ReceiveStreamInvoiceServer) error
	// client streaming
	SendStreamInvoice(BillingService_SendStreamInvoiceServer) error
	// client and server streaming
	SendReceiveStreamInvoice(BillingService_SendReceiveStreamInvoiceServer) error
}

// UnimplementedBillingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBillingServiceServer struct {
}

func (*UnimplementedBillingServiceServer) SendInvoice(context.Context, *SendInvoiceRequest) (*SendInvoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendInvoice not implemented")
}
func (*UnimplementedBillingServiceServer) ReceiveStreamInvoice(*ReceiveStreamInvoiceRequest, BillingService_ReceiveStreamInvoiceServer) error {
	return status.Errorf(codes.Unimplemented, "method ReceiveStreamInvoice not implemented")
}
func (*UnimplementedBillingServiceServer) SendStreamInvoice(BillingService_SendStreamInvoiceServer) error {
	return status.Errorf(codes.Unimplemented, "method SendStreamInvoice not implemented")
}
func (*UnimplementedBillingServiceServer) SendReceiveStreamInvoice(BillingService_SendReceiveStreamInvoiceServer) error {
	return status.Errorf(codes.Unimplemented, "method SendReceiveStreamInvoice not implemented")
}

func RegisterBillingServiceServer(s *grpc.Server, srv BillingServiceServer) {
	s.RegisterService(&_BillingService_serviceDesc, srv)
}

func _BillingService_SendInvoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendInvoiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).SendInvoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/billing.BillingService/SendInvoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).SendInvoice(ctx, req.(*SendInvoiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_ReceiveStreamInvoice_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReceiveStreamInvoiceRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BillingServiceServer).ReceiveStreamInvoice(m, &billingServiceReceiveStreamInvoiceServer{stream})
}

type BillingService_ReceiveStreamInvoiceServer interface {
	Send(*ReceiveStreamInvoiceResponse) error
	grpc.ServerStream
}

type billingServiceReceiveStreamInvoiceServer struct {
	grpc.ServerStream
}

func (x *billingServiceReceiveStreamInvoiceServer) Send(m *ReceiveStreamInvoiceResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BillingService_SendStreamInvoice_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BillingServiceServer).SendStreamInvoice(&billingServiceSendStreamInvoiceServer{stream})
}

type BillingService_SendStreamInvoiceServer interface {
	SendAndClose(*SendStreamInvoiceResponse) error
	Recv() (*SendStreamInvoiceRequest, error)
	grpc.ServerStream
}

type billingServiceSendStreamInvoiceServer struct {
	grpc.ServerStream
}

func (x *billingServiceSendStreamInvoiceServer) SendAndClose(m *SendStreamInvoiceResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *billingServiceSendStreamInvoiceServer) Recv() (*SendStreamInvoiceRequest, error) {
	m := new(SendStreamInvoiceRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _BillingService_SendReceiveStreamInvoice_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(BillingServiceServer).SendReceiveStreamInvoice(&billingServiceSendReceiveStreamInvoiceServer{stream})
}

type BillingService_SendReceiveStreamInvoiceServer interface {
	Send(*SendReceiveStreamInvoiceResponse) error
	Recv() (*SendReceiveStreamInvoiceRequest, error)
	grpc.ServerStream
}

type billingServiceSendReceiveStreamInvoiceServer struct {
	grpc.ServerStream
}

func (x *billingServiceSendReceiveStreamInvoiceServer) Send(m *SendReceiveStreamInvoiceResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *billingServiceSendReceiveStreamInvoiceServer) Recv() (*SendReceiveStreamInvoiceRequest, error) {
	m := new(SendReceiveStreamInvoiceRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _BillingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "billing.BillingService",
	HandlerType: (*BillingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sendInvoice",
			Handler:    _BillingService_SendInvoice_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "receiveStreamInvoice",
			Handler:       _BillingService_ReceiveStreamInvoice_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "sendStreamInvoice",
			Handler:       _BillingService_SendStreamInvoice_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "sendReceiveStreamInvoice",
			Handler:       _BillingService_SendReceiveStreamInvoice_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "billing.proto",
}
